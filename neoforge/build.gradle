plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
}

neoForge {
    version = neoforge_version

    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.add(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})"
        }
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = rootProject.mod_id + "-" + project.name

            pom {
                name = "XunLib"
                description = "A common code library"
                url = 'https://github.com/Xun39/XunLib'
                scm {
                    url = 'https://github.com/Xun39/XunLib'
                    connection = 'scm:git:git://github.com/Xun39/XunLib.git'
                    developerConnection = 'scm:git:ssh://git@github.com:Xun39/XunLib.git'
                }
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/Xun39/XunLib/blob/main/LICENSE'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        name = 'Xun'
                        email = 'kaixunsu@outlook.com'
                    }
                }
            }
        }
    }
    repositories {
        mavenLocal()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }